---
import ListCategories from '@/components/ListCategories'
import ListPosts from '@/components/ListPosts'
import TitlePage from '@/components/TitlePage'
import BaseLayout from '@/layouts/BaseLayout'
import { getPosts } from '@/utils'

const MAX_POSTS = 5 // Max number of posts to show on the home page
const posts = await getPosts(MAX_POSTS)
---

<BaseLayout title="Home" class="relative">
  <style>
    .email-signup-box {
      text-align: center;
      padding: 2rem;
      padding-top: 5rem; /* Increased padding to accommodate the overlapping logo */
      position: relative; /* Needed for absolute positioning of the logo */
      background: linear-gradient(145deg, #6e48aa, #9d50bb);
      color: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
      margin-top: 4rem; /* Space above the signup box */
    }
    .email-signup-box:hover {
      box-shadow: 0 6px 12px rgba(0,0,0,0.3);
    }
    .email-signup-box form {
      max-width: 500px;
      margin: auto;
    }
    .input-email {
      width: 100%;
      padding: 0.75rem;
      margin-bottom: 1rem;
      border: 2px solid #ffffff80;
      background: rgba(255, 255, 255, 0.2);
      color: #fff;
      border-radius: 4px;
    }
    .signup-btn {
      background-color: #ffffff;
      color: #9d50bb;
      font-weight: bold;
      border: none;
      padding: 0.75rem 1.5rem;
      font-size: 1rem;
      cursor: pointer;
      border-radius: 4px;
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    .signup-btn:hover {
      background-color: #f0e6f6;
      color: #6e48aa;
    }
    .logo-overlay {
      position: absolute;
      top: -50px; /* Adjust this value as needed to position the logo */
      left: 50%;
      transform: translateX(-50%);
      width: 100px; /* Adjust the size of the logo */
      height: auto;
    }
  </style>
  <div class="hero bg-cover bg-center h-64 flex items-center justify-center text-white" style="background-image: url('/src/assets/images/IanBannerSmallData.jpg'); background-position: center 25%;">
    <div class="bg-black bg-opacity-50 p-4 rounded">
      <h1 class="text-3xl font-bold">Ian's Blog - Weak Supervision Learning</h1>
      <p class="mt-2">Exploring AI, Sales, Technology, and Mortgage</p>
    </div>
  </div>
  <div class="flex justify-between items-center mt-8">
    <TitlePage title="Featured Posts" />
  </div>
  <div class="categories mt-8">
    <ListCategories />
  </div>
  <div class="posts-grid grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-8">
    <h2 class="text-lg font-medium tracking-wide text-center col-span-full">Latest Posts</h2>
    <ListPosts FirstBig={true} posts={posts} />
  </div>
  <!-- Signup Form at the foot of the page -->
  <div class="email-signup-box">
    <form id="emailSignupForm" class="flex flex-col items-center justify-center">
      <img src="/src/assets/images/3LearnGenIO.svg" alt="LearnGen.IO Logo" class="logo-overlay" style="width: 600px;" />
      <input type="email" name="email" placeholder="Your Best Email..." required class="input-email" />
      <!-- Hidden fields for click and source data -->
      <input type="hidden" name="clickData" id="clickData" value="">
      <input type="hidden" name="sourceData" id="sourceData" value="">
      <button type="submit" class="signup-btn">Subscribe</button>
    </form>
  </div>
</BaseLayout>

<script>
  import { animate, stagger } from 'motion'
  const showAnimations = localStorage.getItem('animations') === 'true'

  if (showAnimations) {
    animate(
      '.title',
      { y: [80, 0], opacity: [0, 1] },
      {
        duration: 2.5,
        opacity: { duration: 3 },
        offset: [0, 0.55, 0.75]
      }
    )
    animate(
      '.categories',
      { opacity: [0, 1], transform: ['translateY(20px)', 'translateY(0)'] },
      { duration: 1.5, easing: 'ease-out', delay: stagger(0.1) }
    )
  }

  // Function to capture click data
  function captureClickData(event) {
    const clickData = { timestamp: new Date(), elementId: event.target.id };
    document.getElementById('clickData').value = JSON.stringify(clickData);
  }

  // Capture source data, e.g., from URL parameters or document referrer
  document.getElementById('sourceData').value = document.referrer || 'direct';

  // Add event listeners to elements you want to track clicks on
  document.querySelectorAll('.trackable').forEach(element => {
    element.addEventListener('click', captureClickData);
  });

  // Form submission handler to send a webhook with header authentication
  document.getElementById('emailSignupForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    const formData = new FormData(this);
    const data = Object.fromEntries(formData.entries());
    
    // Send data to your specified webhook with authentication headers
    const response = await fetch('https://solvedbm3.app.n8n.cloud/webhook/9769e580-dd11-4a85-b2ba-0e5c170b1663', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'learngenform': '123', // Add your authentication header here
      },
      body: JSON.stringify(data), // send the email and other form data
    });
    
    if (response.ok) {
      alert('Thank you for subscribing!');
      this.reset(); // Reset form on successful submission
    } else {
      alert('There was a problem with your subscription. Please try again.');
    }
  });
</script>
